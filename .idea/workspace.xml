<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="57a1d103-e211-4a5d-a770-84033632b571" name="Default" comment="">
      <change afterPath="$PROJECT_DIR$/src/main/java/util/ArrayMatrixUtil.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code08_单调栈在数组中找出每一位左右最近的小于其值的数.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔Test.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔Test.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组Test.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <ignored path="$PROJECT_DIR$/target/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="Code04_用一个栈实现另一个栈的排序.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="345">
              <caret line="15" column="9" selection-start-line="15" selection-start-column="9" selection-end-line="15" selection-end-column="9" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code05_递归解决汉罗塔.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="943">
              <caret line="41" column="47" selection-start-line="41" selection-start-column="47" selection-end-line="41" selection-end-column="47" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code05_递归解决汉罗塔Test.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔Test.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="230">
              <caret line="12" column="44" selection-start-line="12" selection-start-column="44" selection-end-line="12" selection-end-column="44" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code06_使用栈解决汉罗塔.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="943">
              <caret line="44" column="31" selection-start-line="44" selection-start-column="31" selection-end-line="44" selection-end-column="31" />
              <folding>
                <element signature="imports" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code06_使用栈解决汉罗塔Test.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔Test.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-23">
              <caret line="19" column="17" selection-start-line="19" selection-start-column="17" selection-end-line="19" selection-end-column="17" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code07_生成窗口最大值数组.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="266">
              <caret line="27" column="33" lean-forward="true" selection-start-line="27" selection-start-column="33" selection-end-line="27" selection-end-column="33" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code08_单调栈在数组中找出每一位左右最近的小于其值的数.java" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code08_单调栈在数组中找出每一位左右最近的小于其值的数.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="240">
              <caret line="22" column="35" selection-start-line="22" selection-start-column="35" selection-end-line="22" selection-end-column="35" />
              <folding>
                <element signature="imports" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="LinkedList.java" pinned="false" current-in-tab="false">
        <entry file="jar://C:/installation/work/javaJDK/JDK/src.zip!/java/util/LinkedList.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-381">
              <caret line="105" column="11" selection-start-line="105" selection-start-column="11" selection-end-line="105" selection-end-column="11" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="ArrayMatrixUtil.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/main/java/util/ArrayMatrixUtil.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="440">
              <caret line="22" column="9" lean-forward="true" selection-start-line="22" selection-start-column="9" selection-end-line="22" selection-end-column="9" />
              <folding>
                <element signature="e#198#199#0" expanded="true" />
                <element signature="e#234#235#0" expanded="true" />
              </folding>
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="Code07_生成窗口最大值数组Test.java" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组Test.java">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="276">
              <caret line="16" column="46" selection-start-line="16" selection-start-column="46" selection-end-line="16" selection-end-column="46" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Arquillian JUnit Test Class" />
        <option value="JUnit4 Test Class" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code01_MyMinStack.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code02_两个栈组成一个队列.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈.java" />
        <option value="$PROJECT_DIR$/pom.xml" />
        <option value="$PROJECT_DIR$/src/main/java/util/StackUtil.java" />
        <option value="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈Test.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序.java" />
        <option value="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序Test.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔.java" />
        <option value="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔Test.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔.java" />
        <option value="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔Test.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组.java" />
        <option value="$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组Test.java" />
        <option value="$PROJECT_DIR$/src/main/java/util/ArrayMatrixUtil.java" />
        <option value="$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code08_单调栈在数组中找出每一位左右最近的小于其值的数.java" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodePackageJsonFileManager">
    <packageJsonPaths />
  </component>
  <component name="ProjectFrameBounds" extendedState="6">
    <option name="x" value="-10" />
    <option name="y" value="-10" />
    <option name="width" value="1940" />
    <option name="height" value="1050" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <hideEmptyPackages ProjectPane="true" />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
              <item name="util" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="main" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
              <item name="problem01_StackAndQueue" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="AlgorithmCoding" type="b2602c69:ProjectViewProjectNode" />
              <item name="AlgorithmCoding" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="test" type="462c0819:PsiDirectoryNode" />
              <item name="java" type="462c0819:PsiDirectoryNode" />
              <item name="problem01_StackAndQueue" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary" value="JUnit4" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.Arquillian JUnit4" value="" />
    <property name="com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit4" value="" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.15" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="settings.editor.selected.configurable" value="editor.preferences.completion" />
  </component>
  <component name="RecentsManager">
    <key name="CreateTestDialog.RecentsKey">
      <recent name="程序员代码面试指南.problem01_StackAndQueue" />
    </key>
    <key name="CreateTestDialog.Recents.Supers">
      <recent name="" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Application.Code08_单调栈在数组中找出每一位左右最近的小于其值的数">
    <configuration name="Code08_单调栈在数组中找出每一位左右最近的小于其值的数" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="程序员代码面试指南.problem01_StackAndQueue.Code08_单调栈在数组中找出每一位左右最近的小于其值的数" />
      <module name="AlgorithmCoding" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="程序员代码面试指南.problem01_StackAndQueue.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
    </configuration>
    <configuration name="Code05_递归解决汉罗塔Test.hanoiProblemRec" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="AlgorithmCoding" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="程序员代码面试指南.problem01_StackAndQueue.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="程序员代码面试指南.problem01_StackAndQueue" />
      <option name="MAIN_CLASS_NAME" value="程序员代码面试指南.problem01_StackAndQueue.Code05_递归解决汉罗塔Test" />
      <option name="METHOD_NAME" value="hanoiProblemRec" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration name="Code06_使用栈解决汉罗塔Test.check" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="AlgorithmCoding" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="程序员代码面试指南.problem01_StackAndQueue.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="程序员代码面试指南.problem01_StackAndQueue" />
      <option name="MAIN_CLASS_NAME" value="程序员代码面试指南.problem01_StackAndQueue.Code06_使用栈解决汉罗塔Test" />
      <option name="METHOD_NAME" value="check" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration name="Code06_使用栈解决汉罗塔Test.hanoiProblem" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="AlgorithmCoding" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="程序员代码面试指南.problem01_StackAndQueue.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="程序员代码面试指南.problem01_StackAndQueue" />
      <option name="MAIN_CLASS_NAME" value="程序员代码面试指南.problem01_StackAndQueue.Code06_使用栈解决汉罗塔Test" />
      <option name="METHOD_NAME" value="hanoiProblem" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration name="Code07_生成窗口最大值数组Test.getMaxWindow" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
      <module name="AlgorithmCoding" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="程序员代码面试指南.problem01_StackAndQueue.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" value="程序员代码面试指南.problem01_StackAndQueue" />
      <option name="MAIN_CLASS_NAME" value="程序员代码面试指南.problem01_StackAndQueue.Code07_生成窗口最大值数组Test" />
      <option name="METHOD_NAME" value="getMaxWindow" />
      <option name="TEST_OBJECT" value="method" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <properties />
      <listeners />
    </configuration>
    <list>
      <item itemvalue="JUnit.Code05_递归解决汉罗塔Test.hanoiProblemRec" />
      <item itemvalue="JUnit.Code06_使用栈解决汉罗塔Test.hanoiProblem" />
      <item itemvalue="JUnit.Code06_使用栈解决汉罗塔Test.check" />
      <item itemvalue="JUnit.Code07_生成窗口最大值数组Test.getMaxWindow" />
      <item itemvalue="Application.Code08_单调栈在数组中找出每一位左右最近的小于其值的数" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Code08_单调栈在数组中找出每一位左右最近的小于其值的数" />
        <item itemvalue="JUnit.Code07_生成窗口最大值数组Test.getMaxWindow" />
        <item itemvalue="JUnit.Code06_使用栈解决汉罗塔Test.check" />
        <item itemvalue="JUnit.Code06_使用栈解决汉罗塔Test.hanoiProblem" />
        <item itemvalue="JUnit.Code05_递归解决汉罗塔Test.hanoiProblemRec" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="57a1d103-e211-4a5d-a770-84033632b571" name="Default" comment="" />
      <created>1555574030879</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1555574030879</updated>
      <workItem from="1555574034725" duration="16323000" />
      <workItem from="1555660162968" duration="4960000" />
    </task>
    <task id="LOCAL-00001" summary="栈和队列问题01">
      <created>1555596479465</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1555596479465</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TestHistory">
    <history-entry file="Code03_逆序一个栈Test_reverseStack - 2019.04.18 at 18h 18m 27s.xml">
      <configuration name="Code03_逆序一个栈Test.reverseStack" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code04_用一个栈实现另一个栈的排序Test_sortStackByStack - 2019.04.18 at 21h 53m 38s.xml">
      <configuration name="Code04_用一个栈实现另一个栈的排序Test.sortStackByStack" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code05_递归解决汉罗塔Test_hanoiProblemRec - 2019.04.19 at 11h 33m 04s.xml">
      <configuration name="Code05_递归解决汉罗塔Test.hanoiProblemRec" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code05_递归解决汉罗塔Test_hanoiProblemRec - 2019.04.19 at 11h 33m 56s.xml">
      <configuration name="Code05_递归解决汉罗塔Test.hanoiProblemRec" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code05_递归解决汉罗塔Test_hanoiProblemRec - 2019.04.19 at 11h 35m 16s.xml">
      <configuration name="Code05_递归解决汉罗塔Test.hanoiProblemRec" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code06_使用栈解决汉罗塔Test_hanoiProblem - 2019.04.19 at 15h 07m 46s.xml">
      <configuration name="Code06_使用栈解决汉罗塔Test.hanoiProblem" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code06_使用栈解决汉罗塔Test_hanoiProblem - 2019.04.19 at 15h 08m 36s.xml">
      <configuration name="Code06_使用栈解决汉罗塔Test.hanoiProblem" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code06_使用栈解决汉罗塔Test_hanoiProblem - 2019.04.19 at 15h 51m 25s.xml">
      <configuration name="Code06_使用栈解决汉罗塔Test.hanoiProblem" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code06_使用栈解决汉罗塔Test_check - 2019.04.19 at 15h 51m 37s.xml">
      <configuration name="Code06_使用栈解决汉罗塔Test.check" configurationId="JUnit" />
    </history-entry>
    <history-entry file="Code07_生成窗口最大值数组Test_getMaxWindow - 2019.04.19 at 16h 14m 40s.xml">
      <configuration name="Code07_生成窗口最大值数组Test.getMaxWindow" configurationId="JUnit" />
    </history-entry>
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="21283000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="-7" y="-7" width="1550" height="838" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info anchor="bottom" id="Messages" order="7" weight="0.32872927" />
      <window_info anchor="right" id="Palette&#9;" order="3" />
      <window_info id="Image Layers" order="2" />
      <window_info anchor="right" id="Capture Analysis" order="3" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="right" id="Maven Projects" order="3" />
      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
      <window_info anchor="bottom" id="Version Control" order="7" />
      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.5082873" />
      <window_info anchor="bottom" id="Terminal" order="7" />
      <window_info id="Capture Tool" order="2" />
      <window_info id="Designer" order="2" />
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.22265625" />
      <window_info anchor="right" id="Database" order="3" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info id="UI Designer" order="2" />
      <window_info anchor="right" id="Theme Preview" order="3" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Find" order="1" />
    </layout>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="栈和队列问题01" />
    <option name="LAST_COMMIT_MESSAGE" value="栈和队列问题01" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/pom.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="17" column="21" selection-start-line="17" selection-start-column="21" selection-end-line="17" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="506">
          <caret line="22" column="33" selection-start-line="22" selection-start-column="33" selection-end-line="22" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="15" column="9" selection-start-line="15" selection-start-column="9" selection-end-line="15" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="943">
          <caret line="41" column="47" selection-start-line="41" selection-start-column="47" selection-end-line="41" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="230">
          <caret line="12" column="44" selection-start-line="12" selection-start-column="44" selection-end-line="12" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="943">
          <caret line="44" column="31" lean-forward="true" selection-start-line="44" selection-start-column="31" selection-end-line="44" selection-end-column="31" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="19" column="32" selection-start-line="19" selection-start-column="32" selection-end-line="19" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="299">
          <caret line="16" column="41" selection-start-line="16" selection-start-column="41" selection-end-line="16" selection-end-column="41" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/util/StackUtil.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="552">
          <caret line="24" column="9" selection-start-line="24" selection-start-column="9" selection-end-line="24" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="575">
          <caret line="27" column="41" lean-forward="true" selection-start-line="27" selection-start-column="41" selection-end-line="27" selection-end-column="41" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code01_MyMinStack.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="191">
          <caret line="69" column="27" selection-start-line="69" selection-start-column="27" selection-end-line="69" selection-end-column="27" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code02_两个栈组成一个队列.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="329">
          <caret line="43" selection-start-line="43" selection-end-line="43" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/pom.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="391">
          <caret line="17" column="21" selection-start-line="17" selection-start-column="21" selection-end-line="17" selection-end-column="21" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/util/StackUtil.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="552">
          <caret line="24" column="9" selection-start-line="24" selection-start-column="9" selection-end-line="24" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="299">
          <caret line="16" column="41" selection-start-line="16" selection-start-column="41" selection-end-line="16" selection-end-column="41" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code03_逆序一个栈.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="506">
          <caret line="22" column="33" selection-start-line="22" selection-start-column="33" selection-end-line="22" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="322">
          <caret line="19" column="32" selection-start-line="19" selection-start-column="32" selection-end-line="19" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code04_用一个栈实现另一个栈的排序.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="15" column="9" selection-start-line="15" selection-start-column="9" selection-end-line="15" selection-end-column="9" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="943">
          <caret line="41" column="47" selection-start-line="41" selection-start-column="47" selection-end-line="41" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code05_递归解决汉罗塔Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="230">
          <caret line="12" column="44" selection-start-line="12" selection-start-column="44" selection-end-line="12" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="943">
          <caret line="44" column="31" selection-start-line="44" selection-start-column="31" selection-end-line="44" selection-end-column="31" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code06_使用栈解决汉罗塔Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-23">
          <caret line="19" column="17" selection-start-line="19" selection-start-column="17" selection-end-line="19" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/test/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组Test.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="276">
          <caret line="16" column="46" selection-start-line="16" selection-start-column="46" selection-end-line="16" selection-end-column="46" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code07_生成窗口最大值数组.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="266">
          <caret line="27" column="33" lean-forward="true" selection-start-line="27" selection-start-column="33" selection-end-line="27" selection-end-column="33" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/util/ArrayMatrixUtil.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="440">
          <caret line="22" column="9" lean-forward="true" selection-start-line="22" selection-start-column="9" selection-end-line="22" selection-end-column="9" />
          <folding>
            <element signature="e#198#199#0" expanded="true" />
            <element signature="e#234#235#0" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="jar://C:/installation/work/javaJDK/JDK/src.zip!/java/util/LinkedList.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-381">
          <caret line="105" column="11" selection-start-line="105" selection-start-column="11" selection-end-line="105" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/main/java/程序员代码面试指南/problem01_StackAndQueue/Code08_单调栈在数组中找出每一位左右最近的小于其值的数.java">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="240">
          <caret line="22" column="35" selection-start-line="22" selection-start-column="35" selection-end-line="22" selection-end-column="35" />
          <folding>
            <element signature="imports" expanded="true" />
          </folding>
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>AlgorithmCoding</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Maven: junit:junit:4.12</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>